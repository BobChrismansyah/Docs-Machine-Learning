{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Docs Machine Learning \u00b6 Dokumentasi ini dibuat dari hasil Googling, Github AI, dan buku pengenalan Machine Learning Kami TIDAK bertanggung-jawab atas KEAKURATAN mau pun KERUGIAN yang mungkin terjadi akibat memanfaatkan situs ini. HARAP MENANGGUNG SENDIRI SEGALA RISIKO! Jangan lupa mengungkapkan/ menuliskan penghargaan (acknowledgement) jika anda menggunakan bahan karya dari pihak lain. Situs ini berbasis \u201cGoogle Sana, Google Sini, Coba Itu, Coba Ini, Lalu Tanya-tanyi\u201d (GSGSCICILTT). Entah ini PLAGIAT, entah ini RISET, yang jelas tidak pernah ada klaim bahwa ini merupakan karya asli, serta belum tentu pula merupakan solusi terbaik, serta bukan untuk konsumsi Scopus :). Mohon kiranya memberikan tanggapan, terutama jika memiliki solusi alternatif. Semoga catatan ini akan bermanfaat di masa mendatang, saat sudah lupa cara menyelesaikan masalah trivia ini. Rahmat M. Samik-Ibrahim Kontribusi \u00b6 Jika menemukan kesalahan dalam penulisan kata atau ingin menambahkan konten baru, silahkan buat perubahan. Anda juga bisa menggunakan tombol dibagian kanan atas di setiap artikel/konten untuk menambahkan ke pull request. Jika tidak tau apa maksudnya, anda juga bisa membuat issue atau kirim email. Terima Kasih \u00b6","title":"Home"},{"location":"#docs-machine-learning","text":"Dokumentasi ini dibuat dari hasil Googling, Github AI, dan buku pengenalan Machine Learning Kami TIDAK bertanggung-jawab atas KEAKURATAN mau pun KERUGIAN yang mungkin terjadi akibat memanfaatkan situs ini. HARAP MENANGGUNG SENDIRI SEGALA RISIKO! Jangan lupa mengungkapkan/ menuliskan penghargaan (acknowledgement) jika anda menggunakan bahan karya dari pihak lain. Situs ini berbasis \u201cGoogle Sana, Google Sini, Coba Itu, Coba Ini, Lalu Tanya-tanyi\u201d (GSGSCICILTT). Entah ini PLAGIAT, entah ini RISET, yang jelas tidak pernah ada klaim bahwa ini merupakan karya asli, serta belum tentu pula merupakan solusi terbaik, serta bukan untuk konsumsi Scopus :). Mohon kiranya memberikan tanggapan, terutama jika memiliki solusi alternatif. Semoga catatan ini akan bermanfaat di masa mendatang, saat sudah lupa cara menyelesaikan masalah trivia ini. Rahmat M. Samik-Ibrahim","title":"Docs Machine Learning"},{"location":"#kontribusi","text":"Jika menemukan kesalahan dalam penulisan kata atau ingin menambahkan konten baru, silahkan buat perubahan. Anda juga bisa menggunakan tombol dibagian kanan atas di setiap artikel/konten untuk menambahkan ke pull request. Jika tidak tau apa maksudnya, anda juga bisa membuat issue atau kirim email.","title":"Kontribusi"},{"location":"#terima-kasih","text":"","title":"Terima Kasih"},{"location":"MachineLearning/Neural%20Network/neural-network/","text":"neural network \u00b6","title":"Neural Network"},{"location":"MachineLearning/Neural%20Network/neural-network/#neural-network","text":"","title":"neural network"},{"location":"MachineLearning/Pandas/dasar-dasar-pandas/","text":"Dasar-Dasar Pandas \u00b6 Langkah pertama yang harus dilakukan yaitu mengimpor library pandas: import pandas as pd Untuk mempermudah, kita akan menggunakan pd sebagai alias dari pandas. Konspep pandas yaitu menyimpan data yang disebut Series dan DataFrame . Series adalah kolom tunggal, sedangkan DataFrame adalah tabel yang terdiri dari beberapa kolom atau series. Series: \u00b6 mangga 0 1 1 2 2 3 mangga = pd . Series ([ 1 , 2 , 3 ]) Pandas akan otomatis membuat index untuk series, jika tidak ingin menggunakan index default, kita bisa menambahkan parameter index: mangga = pd . Series ([ 1 , 2 , 3 ], index = [ 'a' , 'b' , 'c' ]) Index tidak harus berupa angka numerik, bisa kita ganti dengan string. Dataframe \u00b6 DataFrame tidak jauh beda dengan array NumPy yaitu berupa tabel dua dimensi dengan baris dan kolom. Cara membuat DataFrame adalah dengan menggunakan dictionary: df1 = pd . DataFrame ({ 3 , 0 , 9 }), columns = [ 'apel' ], index = [ 1 , 2 , 3 ]) | |apel | |:-|:-| |1 |3 | |2 |0 | |3 |9 | Untuk DataFrame dengan dua kolom, kita bisa menggunakan dictionary dengan dua key: dict1 = { 'apel' : [ 3 , 0 , 9 ], 'jeruk' : [ 1 , 4 , 2 ]} df1 = pd . DataFrame ( dict1 ) | |apel |jeruk | |:-|:-|:-| |0 |3 |1 | |1 |0 |4 | |2 |9 |2 | Setelah DataFrame terbentuk kita bebas memanipulasinya. Menghitung jumlah data dengan fungsi count() dan juga menghitung jumlah keseluruhan semua nilai sum() df1 . count () Output apel 3 jeruk 3 dtype: int64","title":"Pandas"},{"location":"MachineLearning/Pandas/dasar-dasar-pandas/#dasar-dasar-pandas","text":"Langkah pertama yang harus dilakukan yaitu mengimpor library pandas: import pandas as pd Untuk mempermudah, kita akan menggunakan pd sebagai alias dari pandas. Konspep pandas yaitu menyimpan data yang disebut Series dan DataFrame . Series adalah kolom tunggal, sedangkan DataFrame adalah tabel yang terdiri dari beberapa kolom atau series.","title":"Dasar-Dasar Pandas"},{"location":"MachineLearning/Pandas/dasar-dasar-pandas/#series","text":"mangga 0 1 1 2 2 3 mangga = pd . Series ([ 1 , 2 , 3 ]) Pandas akan otomatis membuat index untuk series, jika tidak ingin menggunakan index default, kita bisa menambahkan parameter index: mangga = pd . Series ([ 1 , 2 , 3 ], index = [ 'a' , 'b' , 'c' ]) Index tidak harus berupa angka numerik, bisa kita ganti dengan string.","title":"Series:"},{"location":"MachineLearning/Pandas/dasar-dasar-pandas/#dataframe","text":"DataFrame tidak jauh beda dengan array NumPy yaitu berupa tabel dua dimensi dengan baris dan kolom. Cara membuat DataFrame adalah dengan menggunakan dictionary: df1 = pd . DataFrame ({ 3 , 0 , 9 }), columns = [ 'apel' ], index = [ 1 , 2 , 3 ]) | |apel | |:-|:-| |1 |3 | |2 |0 | |3 |9 | Untuk DataFrame dengan dua kolom, kita bisa menggunakan dictionary dengan dua key: dict1 = { 'apel' : [ 3 , 0 , 9 ], 'jeruk' : [ 1 , 4 , 2 ]} df1 = pd . DataFrame ( dict1 ) | |apel |jeruk | |:-|:-|:-| |0 |3 |1 | |1 |0 |4 | |2 |9 |2 | Setelah DataFrame terbentuk kita bebas memanipulasinya. Menghitung jumlah data dengan fungsi count() dan juga menghitung jumlah keseluruhan semua nilai sum() df1 . count () Output apel 3 jeruk 3 dtype: int64","title":"Dataframe"}]}